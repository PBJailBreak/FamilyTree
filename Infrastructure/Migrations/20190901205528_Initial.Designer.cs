// <auto-generated />
using System;
using Infrastructure.DataAcess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(FamilyTreeDbContext))]
    [Migration("20190901205528_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Core.Entities.Relation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonFromId");

                    b.Property<int>("PersonToId");

                    b.Property<int>("RelationTypeId");

                    b.Property<DateTime?>("TerminationDate");

                    b.HasKey("Id");

                    b.HasIndex("PersonFromId");

                    b.HasIndex("PersonToId");

                    b.HasIndex("RelationTypeId");

                    b.ToTable("Relations");
                });

            modelBuilder.Entity("Core.Entities.RelationType", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("RelationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Child"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sibling"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Spouse"
                        });
                });

            modelBuilder.Entity("Core.Entities.Relation", b =>
                {
                    b.HasOne("Core.Entities.Person", "PersonFrom")
                        .WithMany("OutgoingRelations")
                        .HasForeignKey("PersonFromId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Core.Entities.Person", "PersonTo")
                        .WithMany("IncomingRelations")
                        .HasForeignKey("PersonToId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Core.Entities.RelationType", "RelationType")
                        .WithMany("Relations")
                        .HasForeignKey("RelationTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
